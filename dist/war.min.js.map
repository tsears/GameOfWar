{"version":3,"sources":["webpack:///war.min.js","webpack:///webpack/bootstrap 20a0e268656419cbd934","webpack:///./js/war.js","webpack:///./js/WarGame.js","webpack:///./js/Player.js","webpack:///./js/RoundResult.js","webpack:///./js/Deck.js","webpack:///./js/Card.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","_WarGame","_WarGame2","War","numSuits","numRanks","numPlayers","this","_numSuits","_numRanks","_numPlayers","_warGame","Deck","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","_Player","_Player2","_RoundResult","_RoundResult2","_Deck","WarGame","deck","_deck","_players","currentSize","Error","push","_distributeCards","player","pIndex","result","indicies","map","_resolveRound","warringPlayers","draw","_draw","max","_findCardWithMaxValue","atWar","filter","rank","war","warringPlayerIndicies","winner","indexOf","console","log","_awardCards","draws","_gameIsOver","gameOver","_this","revealCard","j","playerIndex","cardCount","cards","reduce","a","b","awardCard","shuffle","numPasses","Math","floor","addCard","deal","get","Player","name","_name","_cards","card","unshift","pop","RoundResult","_draws","_war","_winner","_gameOver","set","v","_Card","_Card2","_initialSize","newOrder","oldOrder","slice","randomIndex","random","randomCard","splice","Card","suit","_suit","_rank"],"mappings":"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","file":"war.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _WarGame = __webpack_require__(1);\n\t\n\tvar _WarGame2 = _interopRequireDefault(_WarGame);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar War = function War(numSuits, numRanks, numPlayers) {\n\t  _classCallCheck(this, War);\n\t\n\t  // I would inject the deck as a dependency, so this class is just going to\n\t  // wrap another class that does....\n\t  this._numSuits = numSuits;\n\t  this._numRanks = numRanks;\n\t  this._numPlayers = numPlayers;\n\t\n\t  this._warGame = new _WarGame2.default(new Deck(this._numSuits, this._numRanks), this._numPlayers);\n\t};\n\t\n\texports.default = War;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Player = __webpack_require__(2);\n\t\n\tvar _Player2 = _interopRequireDefault(_Player);\n\t\n\tvar _RoundResult = __webpack_require__(3);\n\t\n\tvar _RoundResult2 = _interopRequireDefault(_RoundResult);\n\t\n\tvar _Deck = __webpack_require__(4);\n\t\n\tvar _Deck2 = _interopRequireDefault(_Deck);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar WarGame = function () {\n\t  function WarGame(deck, numPlayers) {\n\t    _classCallCheck(this, WarGame);\n\t\n\t    this._deck = deck;\n\t    this._numPlayers = numPlayers;\n\t    this._players = [];\n\t\n\t    if (deck.currentSize < numPlayers) {\n\t      throw new Error('Deck must at least the same size as the number of players');\n\t    }\n\t\n\t    for (var i = 1; i <= numPlayers; ++i) {\n\t      this._players.push(new _Player2.default('Player ' + i));\n\t    }\n\t\n\t    this._distributeCards();\n\t  }\n\t\n\t  _createClass(WarGame, [{\n\t    key: 'getPlayer',\n\t    value: function getPlayer(player) {\n\t      // players are not zero indexed... didn't want to do that jujitsu from the\n\t      // consumer.\n\t      var pIndex = player - 1;\n\t      return this._players[pIndex];\n\t    }\n\t  }, {\n\t    key: 'playRound',\n\t    value: function playRound() {\n\t      var result = new _RoundResult2.default();\n\t      var indicies = this._players.map(function (p, i) {\n\t        return i;\n\t      });\n\t\n\t      return this._resolveRound(indicies, result);\n\t    }\n\t\n\t    /*****************************************************************************\n\t    * _resolveRound\n\t    *\n\t    * This is where all the magic happens.  We will recursively determine the outcome\n\t    * of the round.  If the draws result in a war, we will keep calling this function\n\t    * until all wars are resolved.  A complete record of the draws will be returned\n\t    * along with the winner\n\t    *****************************************************************************/\n\t\n\t  }, {\n\t    key: '_resolveRound',\n\t    value: function _resolveRound(warringPlayers, result) {\n\t\n\t      var draw = this._draw(warringPlayers, result);\n\t\n\t      var max = this._findCardWithMaxValue(draw);\n\t      var atWar = draw.filter(function (c) {\n\t        return c && c.rank === max.rank;\n\t      }).length > 1;\n\t\n\t      if (atWar) {\n\t        result.war = true;\n\t\n\t        var warringPlayerIndicies = [];\n\t        for (var i = 0; i < draw.length; i++) {\n\t          if (draw[i] && draw[i].rank === max.rank) {\n\t            warringPlayerIndicies.push(warringPlayers[i]);\n\t          }\n\t        }\n\t\n\t        return this._resolveRound(warringPlayerIndicies, result);\n\t      } else {\n\t        // break recursion\n\t        var winner = this._players[warringPlayers[draw.indexOf(max)]]; //object equality....\n\t        if (!winner) {\n\t          console.log('wut');\n\t        }\n\t        result.winner = winner;\n\t        this._awardCards(result.draws, winner);\n\t\n\t        if (this._gameIsOver()) {\n\t          // console.log('game over!');\n\t          // console.log(`num players: ${this._numPlayers} empty players ${this._players.filter(p => p.cardCount === 0).length}` );\n\t          result.gameOver = true;\n\t        }\n\t\n\t        return result;\n\t      }\n\t    }\n\t  }, {\n\t    key: '_draw',\n\t    value: function _draw(warringPlayers, result) {\n\t      var _this = this;\n\t\n\t      var draw = warringPlayers.map(function (i) {\n\t        return _this._players[i].revealCard();\n\t      });\n\t\n\t      for (var j = 0; j < warringPlayers.length; ++j) {\n\t        var playerIndex = warringPlayers[j];\n\t\n\t        if (!result.draws[playerIndex]) {\n\t          result.draws[playerIndex] = [];\n\t        }\n\t        result.draws[playerIndex].push(draw[j]);\n\t      }\n\t\n\t      return draw;\n\t    }\n\t\n\t    /*****************************************************************************\n\t    * _gameIsOver\n\t    *\n\t    * The game is over when one player has all *available cards* -- if the deck\n\t    * wasn't evenly divisible by the number of players, then excess cards would\n\t    * have been left on the deck, making a strict \"a player has all the cards in\n\t    * the deck\" impossible.\n\t    ******************************************************************************/\n\t\n\t  }, {\n\t    key: '_gameIsOver',\n\t    value: function _gameIsOver() {\n\t      return this._players.filter(function (p) {\n\t        return p.cardCount === 0;\n\t      }).length === this._numPlayers - 1;\n\t    }\n\t  }, {\n\t    key: '_findCardWithMaxValue',\n\t    value: function _findCardWithMaxValue(cards) {\n\t      return cards.filter(function (c) {\n\t        return c;\n\t      }).reduce(function (a, b) {\n\t        // a is the value of the element we're looking at,\n\t        // b is the value of the previous max\n\t        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce#Parameters\n\t        return b.rank > a.rank ? b : a;\n\t      }, { rank: 0 });\n\t    }\n\t  }, {\n\t    key: '_awardCards',\n\t    value: function _awardCards(draws, winner) {\n\t      for (var i = 0; i < draws.length; ++i) {\n\t        for (var j = 0; j < draws[i].length; ++j) {\n\t          if (draws[i][j]) {\n\t            winner.awardCard(draws[i][j]);\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: '_distributeCards',\n\t    value: function _distributeCards() {\n\t      this._deck.shuffle();\n\t\n\t      var numPasses = Math.floor(this._deck.currentSize / this._numPlayers);\n\t\n\t      while (numPasses > 0) {\n\t        for (var i = 0; i < this._numPlayers; ++i) {\n\t          this._players[i].addCard(this._deck.deal());\n\t        }\n\t        --numPasses;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'deck',\n\t    get: function get() {\n\t      return this._deck;\n\t    }\n\t  }, {\n\t    key: 'players',\n\t    get: function get() {\n\t      return this._players;\n\t    }\n\t  }]);\n\t\n\t  return WarGame;\n\t}();\n\t\n\texports.default = WarGame;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Player = function () {\n\t  function Player(name) {\n\t    _classCallCheck(this, Player);\n\t\n\t    this._name = name;\n\t    this._cards = [];\n\t  }\n\t\n\t  _createClass(Player, [{\n\t    key: \"addCard\",\n\t    value: function addCard(card) {\n\t      this._cards.push(card);\n\t    }\n\t  }, {\n\t    key: \"awardCard\",\n\t    value: function awardCard(card) {\n\t      this._cards.unshift(card);\n\t    }\n\t  }, {\n\t    key: \"revealCard\",\n\t    value: function revealCard() {\n\t      return this._cards.pop();\n\t    }\n\t  }, {\n\t    key: \"cardCount\",\n\t    get: function get() {\n\t      return this._cards.length;\n\t    }\n\t  }, {\n\t    key: \"score\",\n\t    get: function get() {\n\t      return this._cards.length;\n\t    }\n\t  }, {\n\t    key: \"name\",\n\t    get: function get() {\n\t      return this._name;\n\t    }\n\t  }]);\n\t\n\t  return Player;\n\t}();\n\t\n\texports.default = Player;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar RoundResult = function () {\n\t  function RoundResult() {\n\t    _classCallCheck(this, RoundResult);\n\t\n\t    this._draws = [];\n\t    this._war = false;\n\t    this._winner = null;\n\t    this._gameOver = false;\n\t  }\n\t\n\t  _createClass(RoundResult, [{\n\t    key: \"draws\",\n\t    get: function get() {\n\t      return this._draws;\n\t    }\n\t  }, {\n\t    key: \"war\",\n\t    get: function get() {\n\t      return this._war;\n\t    },\n\t    set: function set(v) {\n\t      this._war = v;\n\t    }\n\t  }, {\n\t    key: \"winner\",\n\t    get: function get() {\n\t      return this._winner;\n\t    },\n\t    set: function set(v) {\n\t      this._winner = v;\n\t    }\n\t  }, {\n\t    key: \"gameOver\",\n\t    get: function get() {\n\t      return this._gameOver;\n\t    },\n\t    set: function set(v) {\n\t      this._gameOver = v;\n\t    }\n\t  }]);\n\t\n\t  return RoundResult;\n\t}();\n\t\n\texports.default = RoundResult;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Card = __webpack_require__(5);\n\t\n\tvar _Card2 = _interopRequireDefault(_Card);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Deck = function () {\n\t  function Deck(numSuits, numRanks) {\n\t    _classCallCheck(this, Deck);\n\t\n\t    this._numSuits = numSuits;\n\t    this._numRanks = numRanks;\n\t    this._cards = [];\n\t    this._initialSize = 0; // yes, this is just suits * ranks. but we'll count for fun\n\t\n\t    for (var i = 1; i <= numSuits; ++i) {\n\t      for (var j = 1; j <= numRanks; ++j) {\n\t        ++this._initialSize;\n\t        this._cards.push(new _Card2.default(i, j));\n\t      }\n\t    }\n\t  }\n\t\n\t  _createClass(Deck, [{\n\t    key: 'deal',\n\t    value: function deal() {\n\t      return this._cards.pop(); //LIFO\n\t    }\n\t  }, {\n\t    key: 'add',\n\t    value: function add(card) {\n\t      return this._cards.push(card);\n\t    }\n\t  }, {\n\t    key: 'shuffle',\n\t    value: function shuffle() {\n\t      var newOrder = [];\n\t      var oldOrder = this._cards.slice(); // we will leave the initial ordering in tact until the shuffle is complete...\n\t\n\t      do {\n\t        var randomIndex = Math.floor(Math.random() * oldOrder.length);\n\t        var randomCard = oldOrder.splice(randomIndex, 1)[0];\n\t        newOrder.push(randomCard);\n\t      } while (oldOrder.length > 0);\n\t\n\t      this._cards = newOrder;\n\t    }\n\t  }, {\n\t    key: 'numSuits',\n\t    get: function get() {\n\t      return this._numSuits;\n\t    }\n\t  }, {\n\t    key: 'numRanks',\n\t    get: function get() {\n\t      return this._numRanks;\n\t    }\n\t  }, {\n\t    key: 'currentSize',\n\t    get: function get() {\n\t      return this._cards.length;\n\t    }\n\t  }, {\n\t    key: 'initialSize',\n\t    get: function get() {\n\t      return this._initialSize;\n\t    }\n\t  }]);\n\t\n\t  return Deck;\n\t}();\n\t\n\texports.default = Deck;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Card = function () {\n\t  function Card(suit, rank) {\n\t    _classCallCheck(this, Card);\n\t\n\t    this._suit = suit;\n\t    this._rank = rank;\n\t  }\n\t\n\t  _createClass(Card, [{\n\t    key: \"suit\",\n\t    get: function get() {\n\t      return this._suit;\n\t    }\n\t  }, {\n\t    key: \"rank\",\n\t    get: function get() {\n\t      return this._rank;\n\t    }\n\t  }]);\n\t\n\t  return Card;\n\t}();\n\t\n\texports.default = Card;\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// war.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 20a0e268656419cbd934","import WarGame from './WarGame';\n\nexport default class War {\n  constructor(numSuits, numRanks, numPlayers) {\n    // I would inject the deck as a dependency, so this class is just going to\n    // wrap another class that does....\n    this._numSuits = numSuits;\n    this._numRanks = numRanks;\n    this._numPlayers = numPlayers;\n\n    this._warGame = new WarGame(new Deck(this._numSuits, this._numRanks), this._numPlayers);\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./js/war.js","import Player from './Player';\nimport RoundResult from './RoundResult';\nimport Deck from './Deck';\n\nexport default class WarGame {\n  constructor(deck, numPlayers) {\n    this._deck = deck;\n    this._numPlayers = numPlayers;\n    this._players = [];\n\n    if (deck.currentSize < numPlayers) {\n      throw new Error('Deck must at least the same size as the number of players');\n    }\n\n    for (let i = 1; i <= numPlayers; ++i) {\n      this._players.push(new Player(`Player ${i}`));\n    }\n\n    this._distributeCards();\n  }\n\n  get deck() { return this._deck; }\n  get players() { return this._players; }\n\n  getPlayer(player) {\n    // players are not zero indexed... didn't want to do that jujitsu from the\n    // consumer.\n    const pIndex = player - 1;\n    return this._players[pIndex];\n  }\n\n  playRound() {\n    const result = new RoundResult();\n    const indicies = this._players.map((p, i) => { return i; });\n\n    return this._resolveRound(indicies, result);\n  }\n\n\n  /*****************************************************************************\n  * _resolveRound\n  *\n  * This is where all the magic happens.  We will recursively determine the outcome\n  * of the round.  If the draws result in a war, we will keep calling this function\n  * until all wars are resolved.  A complete record of the draws will be returned\n  * along with the winner\n  *****************************************************************************/\n\n  _resolveRound(warringPlayers, result) {\n\n    const draw = this._draw(warringPlayers, result);\n\n    const max = this._findCardWithMaxValue(draw);\n    const atWar = draw.filter(c => c && c.rank === max.rank).length > 1;\n\n    if (atWar) {\n      result.war = true;\n\n      const warringPlayerIndicies = [];\n      for (let i = 0; i < draw.length; i++) {\n        if (draw[i] && draw[i].rank === max.rank) {\n          warringPlayerIndicies.push(warringPlayers[i]);\n        }\n      }\n\n      return this._resolveRound(warringPlayerIndicies, result);\n    } else {\n      // break recursion\n      let winner = this._players[warringPlayers[draw.indexOf(max)]]; //object equality....\n      if (!winner) { console.log('wut'); }\n      result.winner = winner;\n      this._awardCards(result.draws, winner);\n\n      if (this._gameIsOver()) {\n        // console.log('game over!');\n        // console.log(`num players: ${this._numPlayers} empty players ${this._players.filter(p => p.cardCount === 0).length}` );\n        result.gameOver = true;\n      }\n\n      return result;\n    }\n  }\n\n  _draw(warringPlayers, result) {\n    const draw = warringPlayers.map(i => { return this._players[i].revealCard(); });\n\n    for(let j = 0; j < warringPlayers.length; ++j) {\n      const playerIndex = warringPlayers[j];\n\n      if (!result.draws[playerIndex]) { result.draws[playerIndex] = []; }\n      result.draws[playerIndex].push(draw[j]);\n    }\n\n    return draw;\n  }\n\n  /*****************************************************************************\n  * _gameIsOver\n  *\n  * The game is over when one player has all *available cards* -- if the deck\n  * wasn't evenly divisible by the number of players, then excess cards would\n  * have been left on the deck, making a strict \"a player has all the cards in\n  * the deck\" impossible.\n  ******************************************************************************/\n\n  _gameIsOver() {\n    return this._players.filter(p => p.cardCount === 0).length === this._numPlayers - 1;\n  }\n\n  _findCardWithMaxValue(cards) {\n    return cards.filter(c => c).reduce((a, b) => {\n      // a is the value of the element we're looking at,\n      // b is the value of the previous max\n      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce#Parameters\n      return b.rank > a.rank ? b : a;\n    }, {rank: 0});\n  }\n\n  _awardCards(draws, winner) {\n    for(let i = 0; i < draws.length; ++i) {\n      for (let j = 0; j < draws[i].length; ++j) {\n        if(draws[i][j]) {\n          winner.awardCard(draws[i][j]);\n        }\n      }\n    }\n  }\n\n  _distributeCards() {\n    this._deck.shuffle();\n\n    let numPasses = Math.floor(this._deck.currentSize / this._numPlayers);\n\n    while(numPasses > 0) {\n      for (let i = 0; i < this._numPlayers; ++i) {\n        this._players[i].addCard(this._deck.deal());\n      }\n      --numPasses;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./js/WarGame.js","export default class Player {\n  constructor(name) {\n    this._name = name;\n    this._cards = [];\n  }\n\n  get cardCount() { return this._cards.length; }\n  get score() { return this._cards.length; }\n  get name() { return this._name; }\n\n  addCard(card) {\n    this._cards.push(card);\n  }\n\n  awardCard(card) {\n    this._cards.unshift(card);\n  }\n\n  revealCard() {\n    return this._cards.pop();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./js/Player.js","export default class RoundResult {\n  constructor() {\n    this._draws = [];\n    this._war = false;\n    this._winner = null;\n    this._gameOver = false;\n  }\n\n  get draws() { return this._draws; }\n\n  get war() { return this._war; }\n  set war(v) { this._war = v; }\n\n  get winner() { return this._winner; }\n  set winner(v) { this._winner = v; }\n\n  get gameOver() { return this._gameOver; }\n  set gameOver(v) { this._gameOver = v; }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./js/RoundResult.js","import Card from './Card';\n\nexport default class Deck {\n  constructor(numSuits, numRanks) {\n    this._numSuits = numSuits;\n    this._numRanks = numRanks;\n    this._cards = [];\n    this._initialSize = 0; // yes, this is just suits * ranks. but we'll count for fun\n\n    for (let i = 1; i <= numSuits; ++i) {\n      for (let j = 1; j <= numRanks; ++j) {\n        ++this._initialSize;\n        this._cards.push(new Card(i, j));\n      }\n    }\n  }\n\n  get numSuits() { return this._numSuits; }\n  get numRanks() { return this._numRanks; }\n  get currentSize() { return this._cards.length; }\n  get initialSize() { return this._initialSize; }\n\n  deal() {\n    return this._cards.pop(); //LIFO\n  }\n\n  add(card) {\n    return this._cards.push(card);\n  }\n\n  shuffle() {\n    let newOrder = [];\n    let oldOrder = this._cards.slice(); // we will leave the initial ordering in tact until the shuffle is complete...\n\n    do {\n      let randomIndex = Math.floor(Math.random() * oldOrder.length);\n      let randomCard = oldOrder.splice(randomIndex, 1)[0];\n      newOrder.push(randomCard);\n    } while(oldOrder.length > 0);\n\n    this._cards = newOrder;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./js/Deck.js","export default class Card {\n  constructor(suit, rank) {\n    this._suit = suit;\n    this._rank = rank;\n  }\n\n  get suit() {\n    return this._suit;\n  }\n\n  get rank() {\n    return this._rank;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./js/Card.js"],"sourceRoot":""}